import { accept } from "./connection/index";
import { reject } from "./connection/index";
import { sendMessageToNode } from "./connection/index";
import { sendMessageToUser } from "./connection/index";
import { sendRequestToNode } from "./connection/index";
import { sendRequestToUser } from "./connection/index";
import { streamToNode } from "./connection/index";
import { onData } from "./connection/index";
import { onConnect } from "./connection/index";
import { onClose } from "./connection/index";
import { online_1 } from "./connection/index";
import { offline } from "./connection/index";
import { closeConnectionByNodeId } from "./connection/index";
import { closeConnectionsByUserId } from "./connection/index";
export declare let peers: {};
export declare let online: never[];
export declare let encodedStream: null;
export declare let decodedStream: null;
export declare let highWaterMark: number;
export declare let messageEncoder: null;
export declare function sendMessage(to: string, message: Object, type: number): Promise<any> | undefined;
export declare function sendRequest(to: string, request: Object, type: number): Promise<any> | undefined;
export { accept, reject, sendMessageToNode, sendMessageToUser, sendRequestToNode, sendRequestToUser, streamToNode, onData, onConnect, onClose, online as _online, offline as _offline, closeConnectionByNodeId, closeConnectionsByUserId };
